---
- name: Check database.yml.sample
  stat:
    path: /home/ec2-user/raisetech-live8-sample-app/config/database.yml.sample
  register: sample_stat

- name: Rename database
  ansible.builtin.command:
    cmd: mv database.yml.sample database.yml
    chdir: /home/ec2-user/raisetech-live8-sample-app/config/
  when: sample_stat.stat.exists

- name: Change directory and install bundler
  gem:
    name: bundler
    version: "{{ bundler_version }}"
    executable: /home/ec2-user/.rbenv/shims/gem

- name: Rehash rbenv
  become_user: ec2-user
  shell: bash -lc "rbenv rehash"

- name: Change directory and bundle install first
  become_user: ec2-user
  ansible.builtin.command:
    cmd: bash -lc "bundle install"
    chdir: /home/ec2-user/raisetech-live8-sample-app/

- name: Check if masterkey exists
  stat:
    path: /home/ec2-user/raisetech-live8-sample-app/config/master.key
  register: masterkey_stat

- name: Set master.key
  block: 
  - name: Touch master.key
    file:
      path: /home/ec2-user/raisetech-live8-sample-app/config/master.key
      state: touch
  - name: Edit master.key
    lineinfile:
      path: /home/ec2-user/raisetech-live8-sample-app/config/master.key
      insertafter: EOF
      line: "{{ KEY_VALUE }}"
  when: not masterkey_stat.stat.exists

- name: Check .env exists
  stat:
    path: /home/ec2-user/raisetech-live8-sample-app/.env
  register: env_stat

- name: Install .env
  gem:
    name: dotenv-rails
    state: present
    executable: /home/ec2-user/.rbenv/shims/gem
  when: not env_stat.stat.exists

- name: Change directory and bundle install second
  become_user: ec2-user
  ansible.builtin.command:
    cmd: bash -lc "bundle install"
    chdir: /home/ec2-user/raisetech-live8-sample-app/

- name: Touch .env
  file:
    path: /home/ec2-user/raisetech-live8-sample-app/.env
    state: touch
  when: not env_stat.stat.exists

- name: Get the content of .env
  shell: "cat /home/ec2-user/raisetech-live8-sample-app/.env | grep DATABASE"
  register: database_stat
  failed_when: database_stat.rc > 1

- name: Set RDS enviroument
  lineinfile:
    path: /home/ec2-user/raisetech-live8-sample-app/.env
    insertafter: EOF
    line: "{{ item }}"
  with_items:
      - "{{ DATABASE_USERNAME }}"
      - "{{ DATABASE_PASSWORD }}"
      - "{{ DATABASE_HOSTNAME }}"
  when: database_stat.rc == 1

- name: Setting database.yml
  template:
    src: roles/app/templates/database.yml
    dest: /home/ec2-user/raisetech-live8-sample-app/config/database.yml
    owner: ec2-user
    group: ec2-user

- name: Build webpack
  npm:
    name: build
    path: /home/ec2-user/raisetech-live8-sample-app

- name: Start nginx
  become: yes
  shell: bash -lc "systemctl start nginx"

- name: Permission setting production.rb
  ansible.builtin.file:
    path: /home/ec2-user/raisetech-live8-sample-app/config/environments/production.rb
    mode: '0777'

- name: Cache_classes change
  ansible.builtin.replace:
    path: /home/ec2-user/raisetech-live8-sample-app/config/environments/production.rb
    regexp: '\bconfig.cache_classes = true\b'
    replace: 'config.cache_classes = false'

- name: Active.storage change
  ansible.builtin.replace:
    path: /home/ec2-user/raisetech-live8-sample-app/config/environments/production.rb
    regexp: '\bconfig.active_storage.service = :amazon\b'
    replace: 'config.active_storage.service = :local'

- name: Touch log
  become: yes
  ansible.builtin.file:
    path: /home/ec2-user/raisetech-live8-sample-app/log/producition.log
    state: touch
    owner: ec2-user
    group: ec2-user

- name: Changing ownership log
  become_user: ec2-user
  ansible.builtin.file:
    path: /home/ec2-user/raisetech-live8-sample-app/log/producition.log
    mode: '0664'
    owner: ec2-user
    group: ec2-user

- name: Set database
  become_user: ec2-user
  block:
  - name: Create database
    ansible.builtin.command:
      cmd: bash -lc "bundle exec rails db:create RAILS_ENV=production"
      chdir: /home/ec2-user/raisetech-live8-sample-app/
    ignore_errors: yes
  - name: Migrate database
    ansible.builtin.command:
      cmd: bash -lc "bundle exec rails db:migrate RAILS_ENV=production"
      chdir: /home/ec2-user/raisetech-live8-sample-app/
    ignore_errors: yes

- name: Permission setting unicorn.rb
  become_user: ec2-user
  ansible.builtin.file:
    path: /home/ec2-user/raisetech-live8-sample-app/config/unicorn.rb
    mode: '0777'

- name: Start unicorn
  become_user: ec2-user
  ansible.builtin.command:
    cmd: bash -lc "bundle exec unicorn_rails -c config/unicorn.rb -E production -D"
    chdir: /home/ec2-user/raisetech-live8-sample-app/
