---
- name: Change directory and install bundler
  gem:
    name: bundler
    version: "{{ bundler_version }}"
    executable: /home/ec2-user/.rbenv/shims/gem

- name: Rehash rbenv
  become_user: ec2-user
  shell: bash -lc "rbenv rehash"

- name: Change directory and bundle install first
  become_user: ec2-user
  ansible.builtin.command:
    cmd: bash -lc "bundle install"
    chdir: /home/ec2-user/raisetech-live8-sample-app/

- name: Check if master.key exists
  stat:
    path: /home/ec2-user/raisetech-live8-sample-app/config/master.key
  register: masterkey_stat

- name: Set master.key
  block: 
  - name: Deleate credentials
    file:
      path: /home/ec2-user/raisetech-live8-sample-app/config/credentials.yml.enc
      state: absent
  - name: Make master.key
    become: yes
    become_user: ec2-user
    shell: /home/ec2-user/.rbenv/shims/bundle -lc "EDITOR=vim bundle exec rails credentials:edit"
    args:  
      chdir: /home/ec2-user/raisetech-live8-sample-app/
  when: not masterkey_stat.stat.exists

- name: Install .env
  gem:
    name: dotenv-rails
    state: present
    executable: /home/ec2-user/.rbenv/shims/gem

- name: Change directory and bundle install second
  become_user: ec2-user
  ansible.builtin.command:
    cmd: bash -lc "bundle install"
    chdir: /home/ec2-user/raisetech-live8-sample-app/

- name: Touch .env
  file:
    path: /home/ec2-user/raisetech-live8-sample-app/.env
    state: touch

- name: Get the content of .env
  shell: "cat /home/ec2-user/raisetech-live8-sample-app/.env | grep DATABASE"
  register: database_stat
  failed_when: database_stat.rc > 1

- name: Set RDS enviroument
  lineinfile:
    path: /home/ec2-user/raisetech-live8-sample-app/.env
    insertafter: EOF
    line: "{{ item }}"
  with_items:
      - "{{ DATABASE_USERNAME }}"
      - "{{ DATABASE_PASSWORD }}"
      - "{{ DATABASE_HOSTNAME }}"
  when: database_stat.rc == 1

- name: Rename database.yml environment_user_vars
  ansible.builtin.replace:
    path: /home/ec2-user/raisetech-live8-sample-app/config/database.yml.sample
    regexp: 'Rails.application.credentials.dig(:db, :username)'
    replace: "ENV['DATABASE_USER']"

- name: Rename database.yml environment_pass_vars
  ansible.builtin.replace:
    path: /home/ec2-user/raisetech-live8-sample-app/config/database.yml.sample
    regexp: 'Rails.application.credentials.dig(:db, :password)'
    replace: "ENV['DATABASE_PASSWORD']"

- name: Rename database.yml environment_host_vars
  ansible.builtin.replace:
    path: /home/ec2-user/raisetech-live8-sample-app/config/database.yml.sample
    regexp: 'Rails.application.credentials.dig(:db, :host)'
    replace: "ENV['DATABASE_HOST']"

- name: Rename database.yml file
  ansible.builtin.command:
    cmd: mv database.yml.sample database.yml
    chdir: /home/ec2-user/raisetech-live8-sample-app/config/

- name: Load env
  shell: bash -lc "source /home/ec2-user/raisetech-live8-sample-app/.env"

- name: Build webpack
  ansible.builtin.command:
    cmd: bash -lc "npm run build"
    chdir: /home/ec2-user/raisetech-live8-sample-app/

- name: Start nginx
  become: yes
  shell: bash -lc "systemctl start nginx"

- name: Set database
  become_user: ec2-user
  block:
  - name: Create database
    ansible.builtin.command:
      cmd: bash -lc "bundle exec rails db:create RAILS_ENV=production"
      chdir: /home/ec2-user/raisetech-live8-sample-app/
  - name: Migrate database
    ansible.builtin.command:
      cmd: bash -lc "bundle exec rails db:migrate RAILS_ENV=production"
      chdir: /home/ec2-user/raisetech-live8-sample-app/

- name: Start unicorn
  become_user: ec2-user
  ansible.builtin.command:
    cmd: bash -lc "bundle exec unicorn_rails -c config/unicorn.rb -E production -D"
    chdir: /home/ec2-user/raisetech-live8-sample-app/

